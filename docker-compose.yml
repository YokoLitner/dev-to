version: "3.7"

services:
  nginx:
    image: nginx:1.19.0-alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    depends_on:
      - app
    restart: "on-failure"

  app:
    build: .
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    restart: "on-failure"
    depends_on:
      - db

  db:
    image: postgres:15.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "on-failure"
    ports:
      - "5432:5432"

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: .
    env_file:
      - .env
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker -B -l info
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - .:/app
    links:
      - redis
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
